# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/data/te.ipynb.

# %% auto 0
__all__ = ['get_data']

# %% ../../nbs/data/te.ipynb 2
import pandas as pd
import requests

USER_AGENT = {'User-agent': 'Mozilla/5.0'}

TICKER_MAP = {
    'spx:ind': '/spx:ind'
}

def _get_auth_token(auth_url):
    full_auth_url = 'https://tradingeconomics.com' + auth_url
    # print(full_auth_url)

    r = requests.get(full_auth_url, headers=USER_AGENT)
    auth_token = r.text.split("""    TESecurify = """)[1][:100].split('\'')[1]
    return auth_token

def _get_data(s, auth_url, auth_token, span=None, d1=None, d2=None, interval=None):
    data_url = 'https://markets.tradingeconomics.com/chart?'
    data_url += f's={s}&'
    if span != None:
        data_url += f'span={span}&'
    elif (d1 != None) & (d2 != None):
        data_url += f'd1={d1}&'
        data_url += f'd2={d2}&'
    else:
        data_url += f'span=max&'
    if interval != None:
        data_url += f'interval={interval}&'
    data_url += f'securify=new&'
    data_url += f'url={auth_url}&'
    data_url += f'AUTH={auth_token}&'
    data_url += f'ohlc=0'

    # print(data_url)

    r = requests.get(data_url, headers=USER_AGENT)
    data = pd.DataFrame.from_dict(r.json()['series'][0]['data'])

    data.date = pd.to_datetime(data.date)
    data = data.set_index('date').loc[:, ['y']].rename(columns={'y': 'close'})
    
    return data

# %% ../../nbs/data/te.ipynb 3
def get_data(ticker):
    auth_url = TICKER_MAP[ticker]
    auth_token =_get_auth_token(auth_url)
    data = _get_data(ticker, auth_url, auth_token)
    return data
